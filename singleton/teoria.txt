Intenção oficial

Garantir que uma classe tenha somente uma instância no programa e fornecer um ponto
de acesso global para a mesma.

Somente uma instância?
. Geralmente usado para acesso a recursos compartilhados, como acesso à base de dados,
interfaces gráficas, sistema de arquivos, servidores de impressão, logger e mais.
. Também usado para substituir variáveis globais, como em casos de uso de objetos de configuração
do sistema como um todo.

Ponto de acesso global?
. Uma vantagem do singleton é que podemos proteger a instância com encapsulamento, evitando que o código
sobrescreva seu valor.

Aplicabilidade
. Use o singleton quando uma classe precisa ter somente uma instância disponível em todo o seu programa
. Use o singleton quando perceber que está usando variáveis globais para manter partes importantes do seu
programa como variáveis de configuração que são usadas por toda a aplicação.

Consequências

BOM
. Acesso controlado à instância única
. É fácil permitir um número maior de instâncias caso mude de ideia
. Use lazy instantion, o Singleton só é criado no momento do uso.
. Substitui váriaveis globais

RUIM
. É mais difícil de testar
. Viola o princípio de responsabilidade única
. Requer tratamento especial em caso de concorrência
. Erich Gamma(autor) descreveu que removeria se fosse refatorar o livro.